[{"/home/papa/planner-app/src/index.js":"1","/home/papa/planner-app/src/reportWebVitals.js":"2","/home/papa/planner-app/src/App.js":"3","/home/papa/planner-app/src/widgets/ClockWidget.js":"4","/home/papa/planner-app/src/widgets/CalendarWidget.js":"5","/home/papa/planner-app/src/modals/WidgetGalleryModal.js":"6","/home/papa/planner-app/src/widgets/TimerWidget.js":"7","/home/papa/planner-app/src/widgets/ReminderListWidget.js":"8"},{"size":535,"mtime":1687838699659,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":1687838699659,"results":"11","hashOfConfig":"10"},{"size":7284,"mtime":1687841808177,"results":"12","hashOfConfig":"10"},{"size":1068,"mtime":1687840173875,"results":"13","hashOfConfig":"10"},{"size":299,"mtime":1687840288903,"results":"14","hashOfConfig":"10"},{"size":2212,"mtime":1687841814472,"results":"15","hashOfConfig":"10"},{"size":3085,"mtime":1687841826854,"results":"16","hashOfConfig":"10"},{"size":2761,"mtime":1687841830281,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","suppressedMessages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1rxkej5",{"filePath":"21","messages":"22","suppressedMessages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34"},{"filePath":"35","messages":"36","suppressedMessages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38"},{"filePath":"39","messages":"40","suppressedMessages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42"},{"filePath":"43","messages":"44","suppressedMessages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46"},"/home/papa/planner-app/src/index.js",[],[],"/home/papa/planner-app/src/reportWebVitals.js",[],[],"/home/papa/planner-app/src/App.js",["47","48","49","50"],[],"import React, { useState } from 'react';\nimport './App.css';\nimport ClockWidget from './widgets/ClockWidget';\nimport WidgetGalleryModal from './modals/WidgetGalleryModal';\nimport Draggable from 'react-draggable';\nimport TimerWidget from './widgets/TimerWidget';\nimport CalendarWidget from './widgets/CalendarWidget';\n \nfunction App() {\n const [widgets, setWidgets] = useState([\n  { id: new Date().getTime(), component: <ClockWidget />, area: 'main-widget', name: \"Date and Time\" },\n  { id: new Date().getTime() + 2, component: <CalendarWidget />, area: 'right-widget', name: \"Calendar\" },\n  { id: new Date().getTime() + 1, component: <TimerWidget />, area: 'left-widget', name:\"Timer\" },\n ])\n const [showWidgetModal, setShowWidgetModal] = useState(false)\n const [selectedWidgetArea, setSelectedWidgetArea] = useState('')\n \n const removeWidget = (index) => {\n  try {\n   setWidgets(widgets.filter(widget => widget.id !== index))\n  } catch (error) {\n   console.log(error)\n  }\n }\n \n return (\n  <>\n   {showWidgetModal && <WidgetGalleryModal setShowWidgetModal={setShowWidgetModal} selectedWidgetArea={selectedWidgetArea} widgets={widgets} setWidgets={setWidgets} />}\n   <div className=\"add-button\"\n    onClick={() => {\n     console.log('add button clicked')\n     setShowWidgetModal(true)\n     setSelectedWidgetArea('none-widget')\n    }}\n   >\n    <p\n     className='add-widget-button'\n     style={{ background: \"none\", border: \"none\", color: \"black\", fontSize: \"30px\", cursor: \"pointer\", backgroundColor: \"white\", borderRadius: \"50%\", width: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"50px\", position: \"fixed\", bottom: \"10px\", right: \"10px\" }}\n    >+</p>\n   </div>\n   <div className='none-widget' >\n    {widgets.length > 0 && widgets.map((widget, index) => {\n     if (widget.area === 'none-widget') {\n      return (\n       <Draggable>\n            <div style={{ padding: 10,}} className='widget-container' >\n             <div style={{ marginBottom: 10 }}>\n              <select value={widget.area}\n               onChange={(e) => {\n                let widgetList = [...widgets]\n                widgetList[index].area = e.target.value\n                setWidgets(widgetList)\n               }}\n              >\n               <option value=\"none-widget\">Floating</option>\n               <option value=\"left-widget\">Left</option>\n               <option value=\"main-widget\">Main</option>\n               <option value=\"right-widget\">Right</option>\n              </select>\n              <button\n               onClick={() => {\n                removeWidget(widget.id)\n               }}\n               style={{ background: \"none\", border: \"none\", color: \"white\", fontSize: \"15px\", cursor: \"pointer\", float: \"right\" }}\n              >Close</button>\n             </div>\n             {widget.component}\n            </div>\n       </Draggable>\n      )\n     }\n    })}\n   </div>\n   <div className=\"App\">\n    <div className=\"container\">\n     <div className='left-widget'>\n      {widgets.length > 0 && widgets.map((widget, index) => {\n       if (widget.area === 'left-widget') {\n        return (\n         <div style={{ padding: 10,}} className='widget-container'>\n          <div style={{ marginBottom: 10 }}>\n           <select value={widget.area}\n            onChange={(e) => {\n             let widgetList = [...widgets]\n             widgetList[index].area = e.target.value\n             setWidgets(widgetList)\n            }}\n           >\n            <option value=\"none-widget\">Floating</option>\n            <option value=\"left-widget\">Left</option>\n            <option value=\"main-widget\">Main</option>\n            <option value=\"right-widget\">Right</option>\n           </select>\n           <button\n            onClick={() => {\n             removeWidget(widget.id)\n            }}\n            style={{ background: \"none\", border: \"none\", color: \"white\", fontSize: \"15px\", cursor: \"pointer\", float: \"right\" }}\n           >Close</button>\n          </div>\n          {widget.component}\n         </div>\n        )\n       }\n      })}\n      {widgets.filter(widget => widget.area === 'left-widget').length < 3 && widgets.filter(widget => widget.area === 'left-widget').length > 0 &&\n       <button\n        className='add-widget-button'\n        onClick={() => {\n         setShowWidgetModal(true)\n         setSelectedWidgetArea('left-widget')\n        }}>+ Add Widget</button>\n      }\n     </div>\n     <div className='main-widget'>\n      {widgets.length > 0 && widgets.map((widget, index) => {\n       if (widget.area === 'main-widget') {\n        return (\n         <div style={{ padding: 10,}} className='widget-container' >\n          <div style={{ marginBottom: 10 }}>\n           <select value={widget.area}\n            onChange={(e) => {\n             let widgetList = [...widgets]\n             widgetList[index].area = e.target.value\n             setWidgets(widgetList)\n            }}\n           >\n            <option value=\"none-widget\">Floating</option>\n            <option value=\"left-widget\">Left</option>\n            <option value=\"main-widget\">Main</option>\n            <option value=\"right-widget\">Right</option>\n           </select>\n           <button\n            onClick={() => {\n             removeWidget(widget.id)\n            }}\n            style={{ background: \"none\", border: \"none\", color: \"white\", fontSize: \"15px\", cursor: \"pointer\", float: \"right\" }}\n           >Close</button>\n          </div>\n          {widget.component}\n         </div>\n        )\n       }\n      })}\n      {widgets.filter(widget => widget.area === 'main-widget').length < 2 &&\n       <button\n        className='add-widget-button'\n        onClick={() => {\n         setShowWidgetModal(true)\n         setSelectedWidgetArea('main-widget')\n        }}>+ Add Widget</button>\n      }\n     </div>\n     <div className='right-widget'>\n      {widgets.length > 0 && widgets.map((widget, index) => {\n       if (widget.area === 'right-widget') {\n        return (\n         <div style={{ padding: 10,}} className='widget-container'>\n          <div style={{ marginBottom: 10 }}>\n           <select value={widget.area}\n            onChange={(e) => {\n             let widgetList = [...widgets]\n             widgetList[index].area = e.target.value\n             setWidgets(widgetList)\n            }}\n           >\n            <option value=\"none-widget\">Floating</option>\n            <option value=\"left-widget\">Left</option>\n            <option value=\"main-widget\">Main</option>\n            <option value=\"right-widget\">Right</option>\n           </select>\n           <button\n            onClick={() => {\n             removeWidget(widget.id)\n            }}\n            style={{ background: \"none\", border: \"none\", color: \"white\", fontSize: \"15px\", cursor: \"pointer\", float: \"right\" }}\n           >Close</button>\n          </div>\n          {widget.component}\n         </div>\n        )\n       }\n      })}\n      {widgets.filter(widget => widget.area === 'right-widget').length < 3 && widgets.filter(widget => widget.area === 'right-widget').length > 0 &&\n       <button\n        className='add-widget-button'\n        onClick={() => {\n         setShowWidgetModal(true)\n         setSelectedWidgetArea('right-widget')\n        }}>+ Add Widget</button>\n      }\n     </div>\n    </div>\n   </div>\n  </>\n )\n}\n \nexport default App;","/home/papa/planner-app/src/widgets/ClockWidget.js",[],[],"/home/papa/planner-app/src/widgets/CalendarWidget.js",["51","52"],[],"import React, { useEffect, useState } from 'react'\nimport Calendar from 'react-calendar';\nimport \"../styles/styles.css\"\n \nexport default function CalendarWidget() {\n  return (\n    <div style={{ minWidth: 300 }}>\n      <Calendar\n        style={{ width: 300, color:\"black\" }}\n      />\n    </div>\n  )\n}","/home/papa/planner-app/src/modals/WidgetGalleryModal.js",["53"],[],"import React, { useState } from 'react'\nimport ClockWidget from '../widgets/ClockWidget'\nimport ReminderListWidget from '../widgets/ReminderListWidget'\nimport TimerWidget from '../widgets/TimerWidget'\nimport CalendarWidget from '../widgets/CalendarWidget'\n\nexport default function WidgetGalleryModal({ setShowWidgetModal, selectedWidgetArea, widgets, setWidgets }) {\n  const [galleryWidgets, setGalleryWidgets] = useState([\n    { component: <ClockWidget />, name: \"Date and Time\" },\n    { component: <ReminderListWidget />, name: \"Reminder List\" },\n    { component: <TimerWidget />, name: \"Timer\" },\n    { component: <CalendarWidget />, name: \"Calendar\" },\n  ])\n  return (\n    <div className=\"modal\"\n      onClick={(e) => {\n        setShowWidgetModal(false)\n      }}\n    >\n      <div className=\"modal-content\">\n        <div className=\"modal-header\">\n          <h2>Widget Gallery</h2>\n          <div>\n            {galleryWidgets.map((widget, index) => {\n              return (\n                <div key={index} className='widget-gallery-item'\n                  onClick={() => {\n                    let flag = false\n                    for (let i = 0; i < widgets.length; i++) {\n                      if (widgets[i].name === widget.name) {\n                        flag = true\n                        break\n                      }\n                    }\n                    if (!flag) {\n                      setWidgets([...widgets, {\n                        id: new Date().getTime(),\n                        component: widget.component,\n                        area: selectedWidgetArea,\n\t\t\t\t name:widget.name\n                      }])\n                      setShowWidgetModal(false)\n                    } else {\n                      alert('You can only add one of each widget')\n                    }\n                  }}\n                >\n                  <div className='row'>\n                    <div className='widget-gallery-item-name'>{widget.name}</div>\n                    <div className='widget-gallery-item-add-button'>+</div>\n                  </div>\n                  {widget.component}\n                </div>\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/papa/planner-app/src/widgets/TimerWidget.js",["54"],[],"import React, { useEffect, useState } from 'react'\n \nexport default function TimerWidget() {\n  const [timerListData, setTimerListData] = useState({\n    time: 0,\n    isRunning: false,\n  })\n \n  const tidyTime = (time) => {\n    let hours = Math.floor(time / 3600)\n    let minutes = Math.floor((time - (hours * 3600)) / 60)\n    let seconds = time - (hours * 3600) - (minutes * 60)\n \n    if (hours < 10) { hours = \"0\" + hours }\n    if (minutes < 10) { minutes = \"0\" + minutes }\n    if (seconds < 10) { seconds = \"0\" + seconds }\n \n    return hours + ':' + minutes + ':' + seconds\n  }\n \n  useEffect(() => {\n    // timer logic\n    let interval = null\n    if (timerListData.isRunning && timerListData.time > 0) {\n      interval = setInterval(() => {\n        setTimerListData({\n          ...timerListData,\n          time: parseInt(timerListData.time) - 1,\n        })\n      }, 1000)\n    } else if (!timerListData.isRunning && timerListData.time !== 0) {\n      setTimerListData({\n        ...timerListData,\n        isRunning: false,\n      })\n      clearInterval(interval)\n    } else if (timerListData.isRunning && timerListData.time === 0) {\n      setTimerListData({\n        ...timerListData,\n        isRunning: false,\n      })\n      clearInterval(interval)\n      alert('Timer is up!')\n    }\n \n      return () => clearInterval(interval)\n  }, [timerListData.isRunning, timerListData.time])\n \n  return (\n    <div style={{ minWidth: 300 }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"row\" }}>\n        <p>Timer</p>\n      </div>\n      <div className='timer-container'>\n        <div className='timer-display'>\n          {timerListData.isRunning ?\n            <p style={{ textAlign: \"center\", fontWeight: \"bold\", fontSize: 20 }}>{tidyTime(timerListData.time)}</p>\n            :\n            <input type=\"text\" className='text-input' value={timerListData.time} onChange={(e) => {\n              setTimerListData({\n                ...timerListData,\n                time: e.target.value,\n              })\n            }} />\n          }\n        </div>\n        <div className='timer-controls' style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"center\", }}>\n          <button\n            style={{\n              background: \"none\",\n              border: \"none\",\n              color: \"white\",\n              fontSize: \"15px\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              setTimerListData({\n                ...timerListData,\n                isRunning: !timerListData.isRunning,\n              })\n            }}\n          >{timerListData.isRunning ? 'Stop' : 'Start'}</button>\n          <button\n            style={{\n              background: \"none\",\n              border: \"none\",\n              color: \"white\",\n              fontSize: \"15px\",\n              cursor: \"pointer\",\n            }}\n            onClick={() => {\n              setTimerListData({\n                ...timerListData,\n                time: 0,\n              })\n            }}\n          >Reset</button>\n        </div>\n      </div>\n    </div>\n  )\n}","/home/papa/planner-app/src/widgets/ReminderListWidget.js",["55"],[],"import React, { useEffect, useState } from 'react'\n \nexport default function ReminderListWidget() {\n  const [reminderListData, setReminderListData] = useState()\n \n  useEffect(() => {\n    let reminderList = JSON.parse(localStorage.getItem('reminderList')) || []\n    if (!reminderList || reminderList == \"undefined\") {\n      reminderList = []\n    }\n    setReminderListData(reminderList)\n  }, [])\n \n  useEffect(() => {\n    if (!reminderListData) {\n      return\n    }\n    localStorage.setItem('reminderList', JSON.stringify(reminderListData))\n  }, [reminderListData])\n \n  return (\n    <div style={{ minWidth: 300 }}>\n      <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"row\" }}>\n        <p>Reminder List</p>\n        <button\n          style={{\n            background: \"none\",\n            border: \"none\",\n            color: \"white\",\n            fontSize: \"15px\",\n            cursor: \"pointer\",\n          }}\n          onClick={() => {\n            setReminderListData([...reminderListData, {\n              title: '',\n              datestamp: '',\n            }])\n          }}\n        >+ New</button>\n      </div>\n      {reminderListData?.length > 0 && reminderListData.map((reminder, index) => {\n        return (\n          <div className='reminder-container' key={index}>\n            <div style={{ display: \"flex\", justifyContent: \"space-between\", alignItems: \"row\" }}>\n              <input className='text-input' value={reminder.title}\n                onKeyDown={(e) => {\n                  if (e.key === 'Enter') {\n                    let reminderList = [...reminderListData]\n                    reminderList[index].title = e.target.value\n                    reminderList[index].datestamp = new Date()\n                    setReminderListData([...reminderList, {\n                      title: '',\n                      datestamp: '',\n                    }])\n                  }\n                }}\n                onChange={(e) => {\n                  let reminderList = [...reminderListData]\n                  reminderList[index].title = e.target.value\n                  reminderList[index].datestamp = new Date()\n                  setReminderListData(reminderList)\n                }} />\n              <button\n                style={{\n                  background: \"none\",\n                  border: \"none\",\n                  color: \"white\",\n                  fontSize: \"15px\",\n                  cursor: \"pointer\",\n                }}\n                onClick={() => {\n                  let reminderList = [...reminderListData]\n                  reminderList.splice(index, 1)\n                  setReminderListData(reminderList)\n                }}\n              >X</button>\n            </div>\n          </div>\n        )\n      })}\n    </div>\n  )\n}",{"ruleId":"56","severity":1,"message":"57","line":42,"column":56,"nodeType":"58","messageId":"59","endLine":42,"endColumn":58},{"ruleId":"56","severity":1,"message":"57","line":77,"column":58,"nodeType":"58","messageId":"59","endLine":77,"endColumn":60},{"ruleId":"56","severity":1,"message":"57","line":116,"column":58,"nodeType":"58","messageId":"59","endLine":116,"endColumn":60},{"ruleId":"56","severity":1,"message":"57","line":155,"column":58,"nodeType":"58","messageId":"59","endLine":155,"endColumn":60},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":1,"column":28,"nodeType":"62","messageId":"63","endLine":1,"endColumn":36},{"ruleId":"60","severity":1,"message":"65","line":8,"column":26,"nodeType":"62","messageId":"63","endLine":8,"endColumn":43},{"ruleId":"66","severity":1,"message":"67","line":47,"column":6,"nodeType":"68","endLine":47,"endColumn":51,"suggestions":"69"},{"ruleId":"70","severity":1,"message":"71","line":8,"column":39,"nodeType":"72","messageId":"73","endLine":8,"endColumn":41},"array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'setGalleryWidgets' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'timerListData'. Either include it or remove the dependency array. You can also do a functional update 'setTimerListData(t => ...)' if you only need 'timerListData' in the 'setTimerListData' call.","ArrayExpression",["74"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected",{"desc":"75","fix":"76"},"Update the dependencies array to be: [timerListData, timerListData.isRunning, timerListData.time]",{"range":"77","text":"78"},[1329,1374],"[timerListData, timerListData.isRunning, timerListData.time]"]